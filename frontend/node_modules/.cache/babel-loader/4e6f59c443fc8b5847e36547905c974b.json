{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elvis\\\\Desktop\\\\SupportTicketSystem\\\\SupportTicketSystem-master\\\\frontend\\\\src\\\\components\\\\Ticket.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nclass Ticket extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: '',\n      content: '',\n      messages: '',\n      status: '',\n      img: '',\n      file: '',\n      imagePreviewUrl: '',\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  _handleSubmit(e) {\n    e.preventDefault();\n    console.log('handle uploading-', this.state.file);\n  }\n\n  _handleImageChange(e) {\n    e.preventDefault();\n    let reader = new FileReader();\n    let file = e.target.files[0];\n\n    reader.onloadend = () => {\n      this.setState({\n        file: file,\n        imagePreviewUrl: reader.result\n      });\n    };\n\n    reader.readAsDataURL(file);\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    let formData = new FormData();\n    formData.append('img', this.state.file);\n    formData.append('name', this.state.name);\n    formData.append('content', this.state.content);\n    formData.append('messages', this.state.messages);\n    axios({\n      method: 'post',\n      url: 'tickets/addTickets',\n      data: formData,\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(function (response) {\n      console.log(response);\n    }).catch(function (response) {\n      console.log(response);\n    });\n  }\n\n  render() {\n    let {\n      imagePreviewUrl\n    } = this.state;\n\n    if (imagePreviewUrl) {\n      $imagePreview = /*#__PURE__*/React.createElement(\"img\", {\n        src: imagePreviewUrl,\n        alt: \"Preview\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 23\n        }\n      });\n    } else {\n      $imagePreview = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"previewText\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 23\n        }\n      }, \"Please select an Image for Preview\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-8 mx-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, \"ADD TICKET\")), /*#__PURE__*/React.createElement(\"form\", {\n      encType: \"multipart/form-data\",\n      noValidate: true,\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"name\",\n      className: \"mx-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, \"Ticket Name\")), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"name\",\n      className: \"mx-2\",\n      placeholder: \"Enter ticket name\",\n      value: this.state.name,\n      onChange: this.onChange,\n      name: \"name\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"content\",\n      className: \"mx-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, \"Content\")), /*#__PURE__*/React.createElement(\"textarea\", {\n      id: \"content\",\n      name: \"content\",\n      className: \"mx-4\",\n      rows: \"2\",\n      placeholder: \"Enter content\",\n      value: this.state.content,\n      onChange: this.onChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"content\",\n      className: \"mx-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }\n    }, \"Message\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      id: \"messages\",\n      className: \"mx-3\",\n      name: \"messages\",\n      rows: \"2\",\n      placeholder: \"Enter Message\",\n      value: this.state.messages.text,\n      onChange: this.onChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"previewComponent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: e => this._handleSubmit(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"fileInput\",\n      type: \"file\",\n      onChange: e => this._handleImageChange(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"submitButton\",\n      type: \"submit\",\n      onClick: e => this._handleSubmit(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }\n    }, \"Upload Image\"))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 15\n      }\n    }, \"Submit\")))));\n  }\n\n}\n\nexport default Ticket;","map":{"version":3,"sources":["C:/Users/elvis/Desktop/SupportTicketSystem/SupportTicketSystem-master/frontend/src/components/Ticket.js"],"names":["React","Component","axios","Ticket","constructor","state","name","content","messages","status","img","file","imagePreviewUrl","errors","onChange","bind","onSubmit","e","setState","target","value","_handleSubmit","preventDefault","console","log","_handleImageChange","reader","FileReader","files","onloadend","result","readAsDataURL","formData","FormData","append","method","url","data","headers","then","response","catch","render","$imagePreview","text"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,MAAN,SAAqBF,SAArB,CAA+B;AAC7BG,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,OAAO,EAAE,EAFE;AAGXC,MAAAA,QAAQ,EAAE,EAHC;AAIXC,MAAAA,MAAM,EAAE,EAJG;AAKXC,MAAAA,GAAG,EAAE,EALM;AAMXC,MAAAA,IAAI,EAAE,EANK;AAOXC,MAAAA,eAAe,EAAE,EAPN;AAQXC,MAAAA,MAAM,EAAE;AARG,KAAb;AAWA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcD,IAAd,CAAmB,IAAnB,CAAhB;AACD;;AAEDD,EAAAA,QAAQ,CAACG,CAAD,EAAI;AACV,SAAKC,QAAL,CAAc;AAAE,OAACD,CAAC,CAACE,MAAF,CAASb,IAAV,GAAiBW,CAAC,CAACE,MAAF,CAASC;AAA5B,KAAd;AACD;;AAEDC,EAAAA,aAAa,CAACJ,CAAD,EAAI;AACfA,IAAAA,CAAC,CAACK,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiC,KAAKnB,KAAL,CAAWM,IAA5C;AACD;;AAEDc,EAAAA,kBAAkB,CAACR,CAAD,EAAI;AACpBA,IAAAA,CAAC,CAACK,cAAF;AAEA,QAAII,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACA,QAAIhB,IAAI,GAAGM,CAAC,CAACE,MAAF,CAASS,KAAT,CAAe,CAAf,CAAX;;AAEAF,IAAAA,MAAM,CAACG,SAAP,GAAmB,MAAM;AACvB,WAAKX,QAAL,CAAc;AACZP,QAAAA,IAAI,EAAEA,IADM;AAEZC,QAAAA,eAAe,EAAEc,MAAM,CAACI;AAFZ,OAAd;AAID,KALD;;AAOAJ,IAAAA,MAAM,CAACK,aAAP,CAAqBpB,IAArB;AACD;;AAEDK,EAAAA,QAAQ,CAACC,CAAD,EAAI;AACVA,IAAAA,CAAC,CAACK,cAAF;AAEA,QAAIU,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,KAAhB,EAAuB,KAAK7B,KAAL,CAAWM,IAAlC;AACAqB,IAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwB,KAAK7B,KAAL,CAAWC,IAAnC;AACA0B,IAAAA,QAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA2B,KAAK7B,KAAL,CAAWE,OAAtC;AACAyB,IAAAA,QAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4B,KAAK7B,KAAL,CAAWG,QAAvC;AAEAN,IAAAA,KAAK,CAAC;AACJiC,MAAAA,MAAM,EAAE,MADJ;AAEJC,MAAAA,GAAG,EAAE,oBAFD;AAGJC,MAAAA,IAAI,EAAEL,QAHF;AAIJM,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAJL,KAAD,CAAL,CAMGC,IANH,CAMQ,UAAUC,QAAV,EAAoB;AACxBjB,MAAAA,OAAO,CAACC,GAAR,CAAYgB,QAAZ;AACD,KARH,EASGC,KATH,CASS,UAAUD,QAAV,EAAoB;AACzBjB,MAAAA,OAAO,CAACC,GAAR,CAAYgB,QAAZ;AACD,KAXH;AAYD;;AAEDE,EAAAA,MAAM,GAAG;AACP,QAAI;AAAE9B,MAAAA;AAAF,QAAsB,KAAKP,KAA/B;;AAEA,QAAIO,eAAJ,EAAqB;AACnB+B,MAAAA,aAAa,gBAAG;AAAK,QAAA,GAAG,EAAE/B,eAAV;AAA2B,QAAA,GAAG,EAAC,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhB;AACD,KAFD,MAEO;AACL+B,MAAAA,aAAa,gBAAG;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAAhB;AACD;;AAED,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,eAIE;AAAM,MAAA,OAAO,EAAC,qBAAd;AAAoC,MAAA,UAAU,MAA9C;AAA+C,MAAA,QAAQ,EAAE,KAAK3B,QAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,OAAO,EAAC,MAAf;AAAsB,MAAA,SAAS,EAAC,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CADF,eAIE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,EAAE,EAAC,MAFL;AAGE,MAAA,SAAS,EAAC,MAHZ;AAIE,MAAA,WAAW,EAAC,mBAJd;AAKE,MAAA,KAAK,EAAE,KAAKX,KAAL,CAAWC,IALpB;AAME,MAAA,QAAQ,EAAE,KAAKQ,QANjB;AAOE,MAAA,IAAI,EAAC,MAPP;AAQE,MAAA,QAAQ,MARV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF,eAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBF,eAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,OAAO,EAAC,SAAf;AAAyB,MAAA,SAAS,EAAC,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF,eAIE;AACE,MAAA,EAAE,EAAC,SADL;AAEE,MAAA,IAAI,EAAC,SAFP;AAGE,MAAA,SAAS,EAAC,MAHZ;AAIE,MAAA,IAAI,EAAC,GAJP;AAKE,MAAA,WAAW,EAAC,eALd;AAME,MAAA,KAAK,EAAE,KAAKT,KAAL,CAAWE,OANpB;AAOE,MAAA,QAAQ,EAAE,KAAKO,QAPjB;AAQE,MAAA,QAAQ,MARV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CAjBF,eAgCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhCF,eAiCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,OAAO,EAAC,SAAf;AAAyB,MAAA,SAAS,EAAC,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAIE;AACE,MAAA,EAAE,EAAC,UADL;AAEE,MAAA,SAAS,EAAC,MAFZ;AAGE,MAAA,IAAI,EAAC,UAHP;AAIE,MAAA,IAAI,EAAC,GAJP;AAKE,MAAA,WAAW,EAAC,eALd;AAME,MAAA,KAAK,EAAE,KAAKT,KAAL,CAAWG,QAAX,CAAoBoC,IAN7B;AAOE,MAAA,QAAQ,EAAE,KAAK9B,QAPjB;AAQE,MAAA,QAAQ,MARV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CAjCF,eAgDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhDF,eAiDE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,QAAQ,EAAGG,CAAD,IAAO,KAAKI,aAAL,CAAmBJ,CAAnB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAC,WADZ;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,QAAQ,EAAGA,CAAD,IAAO,KAAKQ,kBAAL,CAAwBR,CAAxB,CAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAME;AAAQ,MAAA,SAAS,EAAC,cAAlB;AAAiC,MAAA,IAAI,EAAC,QAAtC;AAA+C,MAAA,OAAO,EAAGA,CAAD,IAAO,KAAKI,aAAL,CAAmBJ,CAAnB,CAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANF,CADF,CAjDF,eA6DE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA7DF,eA8DE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CA9DF,CAJF,CADF,CADF;AA2ED;;AAtJ4B;;AAyJ/B,eAAed,MAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass Ticket extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: '',\n      content: '',\n      messages: '',\n      status: '',\n      img: '',\n      file: '',\n      imagePreviewUrl: '',\n      errors: {},\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  _handleSubmit(e) {\n    e.preventDefault();\n    console.log('handle uploading-', this.state.file);\n  }\n\n  _handleImageChange(e) {\n    e.preventDefault();\n\n    let reader = new FileReader();\n    let file = e.target.files[0];\n\n    reader.onloadend = () => {\n      this.setState({\n        file: file,\n        imagePreviewUrl: reader.result,\n      });\n    };\n\n    reader.readAsDataURL(file);\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    let formData = new FormData();\n    formData.append('img', this.state.file);\n    formData.append('name', this.state.name);\n    formData.append('content', this.state.content);\n    formData.append('messages', this.state.messages);\n\n    axios({\n      method: 'post',\n      url: 'tickets/addTickets',\n      data: formData,\n      headers: { 'Content-Type': 'multipart/form-data' },\n    })\n      .then(function (response) {\n        console.log(response);\n      })\n      .catch(function (response) {\n        console.log(response);\n      });\n  }\n\n  render() {\n    let { imagePreviewUrl } = this.state;\n\n    if (imagePreviewUrl) {\n      $imagePreview = <img src={imagePreviewUrl} alt=\"Preview\" />;\n    } else {\n      $imagePreview = <div className=\"previewText\">Please select an Image for Preview</div>;\n    }\n\n    return (\n      <div className=\"container\">\n        <div className=\"jumbotron mt-5\">\n          <div className=\"col-sm-8 mx-auto\">\n            <h1 className=\"text-center\">ADD TICKET</h1>\n          </div>\n          <form encType=\"multipart/form-data\" noValidate onSubmit={this.onSubmit}>\n            <div>\n              <label htmlFor=\"name\" className=\"mx-3\">\n                <p>Ticket Name</p>\n              </label>\n              <input\n                type=\"text\"\n                id=\"name\"\n                className=\"mx-2\"\n                placeholder=\"Enter ticket name\"\n                value={this.state.name}\n                onChange={this.onChange}\n                name=\"name\"\n                required\n              ></input>\n            </div>\n            <br></br>\n            <div>\n              <label htmlFor=\"content\" className=\"mx-3\">\n                <p>Content</p>\n              </label>\n              <textarea\n                id=\"content\"\n                name=\"content\"\n                className=\"mx-4\"\n                rows=\"2\"\n                placeholder=\"Enter content\"\n                value={this.state.content}\n                onChange={this.onChange}\n                required\n              ></textarea>\n            </div>\n            <br></br>\n            <div>\n              <label htmlFor=\"content\" className=\"mx-3\">\n                Message\n              </label>\n              <textarea\n                id=\"messages\"\n                className=\"mx-3\"\n                name=\"messages\"\n                rows=\"2\"\n                placeholder=\"Enter Message\"\n                value={this.state.messages.text}\n                onChange={this.onChange}\n                required\n              ></textarea>\n            </div>\n            <br></br>\n            <div className=\"previewComponent\">\n              <form onSubmit={(e) => this._handleSubmit(e)}>\n                <input\n                  className=\"fileInput\"\n                  type=\"file\"\n                  onChange={(e) => this._handleImageChange(e)}\n                />\n                <button className=\"submitButton\" type=\"submit\" onClick={(e) => this._handleSubmit(e)}>\n                  Upload Image\n                </button>\n              </form>\n            </div>\n            <br></br>\n            <div>\n              <button type=\"submit\">Submit</button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Ticket;"]},"metadata":{},"sourceType":"module"}